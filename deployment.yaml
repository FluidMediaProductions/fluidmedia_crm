apiVersion: v1
kind: Namespace
metadata:
  name: crm
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: postgres-pv-claim
  namespace: crm
  labels:
    user: fluid
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: data-pv-claim
  namespace: crm
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: postgres
  namespace: crm
  labels:
    user: fluid
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: postgres
        user: fluid
    spec:
      volumes:
      - name: postgres-data
        persistentVolumeClaim:
          claimName: postgres-pv-claim
      containers:
      - name: postgres
        image: postgres
        imagePullPolicy: Always
        ports:
          - containerPort: 5432
            protocol: TCP
        env:
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-pass
              key: pass
        volumeMounts:
        - name: postgres-data
          mountPath: /var/lib/postgresql/data
---
apiVersion: v1
kind: Service
metadata:
  namespace: crm
  name: postgres
  labels:
    app: postgres
    user: fluid
spec:
  selector:
    app: postgres
    user: fluid
  ports:
  - port: 5432
    protocol: TCP
    targetPort: 5432
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: server
  namespace: crm
  labels:
    user: fluid
spec:
  replicas: 3
  template:
    metadata:
      labels:
        app: server
        user: fluid
    spec:
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: data-pv-claim
      containers:
      - name: server
        image: evilben/fluidmedia_crm:latest
        imagePullPolicy: Always
        ports:
          - containerPort: 8080
            protocol: TCP
        env:
        - name: CLIENT_NAME
          value: "Fluid Media"
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-pass
              key: pass
        volumeMounts:
        - name: data
          mountPath: /data
        args: ["/fluidmedia_crm", "-db-connect", "user=postgres password=%s host=postgres dbname=postgres sslmode=disable"]
---
apiVersion: v1
kind: Service
metadata:
  namespace: crm
  name: server
  labels:
    app: server
    user: fluid
spec:
  selector:
    app: server
    user: fluid
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: server
  namespace: crm
  labels:
    app: server
    user: fluid
  annotations:
    kubernetes.io/tls-acme: "true"
spec:
  tls:
  - hosts:
    - "crm.fluidmedia.wales"
    secretName: server-tls
  rules:
  - host: "crm.fluidmedia.wales"
    http:
      paths:
      - path: "/"
        backend:
          serviceName: server
          servicePort: 8080
